{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "Cell.svelte",
    "Clue.svelte",
    "ClueBar.svelte",
    "ClueList.svelte",
    "Clues.svelte",
    "CompletedMessage.svelte",
    "Confetti.svelte",
    "Crossword.svelte",
    "Puzzle.svelte",
    "Toolbar.svelte",
    "Keyboard.svelte",
    "Image.svelte",
    "Intro.svelte",
    "Nav.svelte",
    "NavLevel.svelte",
    "Oreo.svelte",
    "Slides.svelte",
    "Clues.svelte",
    "CluesType.svelte",
    "First.svelte",
    "Frequency.svelte",
    "Popularity.svelte",
    "PopularityGrid.svelte",
    "Possible.svelte",
    "Scatter.svelte",
    "Time.svelte",
    "Icon.svelte",
    "Clue.svelte",
    "Recirc.svelte"
  ],
  "sourcesContent": [
    "<script>\n  export let x;\n  export let y;\n  export let value;\n  export let answer;\n  export let number;\n  export let index;\n  export let custom;\n  export let changeDelay = 0;\n  export let isRevealing = false;\n  export let isChecking = false;\n  export let isFocused = false;\n  export let isSecondarilyFocused = false;\n  export let onFocusCell = () => {};\n  export let onCellUpdate = () => {};\n  export let onFocusClueDiff = () => {};\n  export let onMoveFocus = () => {};\n  export let onFlipDirection = () => {};\n  export let onHistoricalChange = () => {};\n\n  let element;\n\n  $: isFocused, onFocusSelf();\n  $: correct = answer === value;\n  $: showCheck = isChecking && value;\n\n  function onFocusSelf() {\n    if (!element) return;\n    if (isFocused) element.focus();\n  }\n\n  function onKeydown(e) {\n    if (e.ctrlKey && e.key.toLowerCase() == \"z\") {\n      onHistoricalChange(e.shiftKey ? 1 : -1);\n    }\n\n    if (e.ctrlKey) return;\n    if (e.altKey) return;\n\n    if (e.key === \"Tab\") {\n      onFocusClueDiff(e.shiftKey ? -1 : 1);\n      e.preventDefault();\n      e.stopPropagation();\n      return;\n    }\n\n    if (e.key == \" \") {\n      onFlipDirection();\n      e.preventDefault();\n      e.stopPropagation();\n      return;\n    }\n\n    if ([\"Delete\", \"Backspace\"].includes(e.key)) {\n      onCellUpdate(index, \"\", -1, true);\n      return;\n    }\n\n    const isKeyInAlphabet = /^[a-zA-Z()]$/.test(e.key);\n    if (isKeyInAlphabet) {\n      onCellUpdate(index, e.key.toUpperCase());\n      return;\n    }\n\n    const diff = {\n      ArrowLeft: [\"across\", -1],\n      ArrowRight: [\"across\", 1],\n      ArrowUp: [\"down\", -1],\n      ArrowDown: [\"down\", 1],\n    }[e.key];\n    if (diff) {\n      onMoveFocus(...diff);\n      e.preventDefault();\n      e.stopPropagation();\n      return;\n    }\n  }\n\n  function onClick() {\n    onFocusCell(index);\n  }\n\n  function pop(node, { delay = 0, duration = 250 }) {\n    return {\n      delay,\n      duration,\n      css: (t) =>\n        [\n          `transform: translate(0, ${1 - t}px)`, //\n        ].join(\";\"),\n    };\n  }\n</script>\n\n<g\n  class=\"cell {custom} cell-{x}-{y}\"\n  class:is-focused=\"{isFocused}\"\n  class:is-secondarily-focused=\"{isSecondarilyFocused}\"\n  class:is-correct=\"{showCheck && correct}\"\n  class:is-incorrect=\"{showCheck && !correct}\"\n  transform=\"{`translate(${x}, ${y})`}\"\n  tabIndex=\"0\"\n  on:click=\"{onClick}\"\n  on:keydown=\"{onKeydown}\"\n  bind:this=\"{element}\">\n  <rect width=\"1\" height=\"1\"></rect>\n\n  {#if showCheck && !correct}\n    <line x1=\"0\" y1=\"1\" x2=\"1\" y2=\"0\"></line>\n  {/if}\n\n  {#if value}\n    <text\n      transition:pop=\"{{ y: 5, delay: changeDelay, duration: isRevealing ? 250 : 0 }}\"\n      class=\"value\"\n      x=\"0.5\"\n      y=\"0.9\"\n      text-anchor=\"middle\">\n      {value}\n    </text>\n  {/if}\n  <text class=\"number\" x=\"0.08\" y=\"0.3\" text-anchor=\"start\">{number}</text>\n</g>\n\n<style>\n  g {\n    cursor: pointer;\n    -webkit-user-select: none;\n       -moz-user-select: none;\n        -ms-user-select: none;\n            user-select: none;\n  }\n\n  g:focus {\n    outline: none;\n  }\n\n  g.is-secondarily-focused rect {\n    fill: var(--secondary-highlight-color);\n  }\n\n  g.is-focused rect {\n    fill: var(--primary-highlight-color);\n  }\n\n  text {\n    pointer-events: none;\n    line-height: 1;\n    font-family: var(--font);\n    fill: var(--main-color);\n  }\n\n  .value {\n    font-size: 0.7em;\n    font-weight: 400;\n  }\n\n  .number {\n    font-size: 0.3em;\n    font-weight: 400;\n    fill: var(--main-color);\n    opacity: 0.5;\n  }\n\n  rect {\n    fill: var(--bg-color);\n    stroke: var(--main-color);\n    stroke-width: 0.01em;\n    transition: fill 0.1s ease-out;\n  }\n\n  line {\n    stroke: var(--main-color);\n    stroke-width: 0.02em;\n  }</style>\n",
    "<script>\n  import scrollTo from \"./helpers/scrollTo.js\";\n\n  export let number;\n  export let clue;\n  export let custom;\n  export let isFilled;\n  export let isNumberFocused = false;\n  export let isDirectionFocused = false;\n  export let isDisableHighlight = false;\n  export let onFocus = () => {};\n\n  let element;\n\n  $: isFocused = isNumberFocused;\n</script>\n\n<li bind:this=\"{element}\" use:scrollTo=\"{isFocused}\">\n  <button\n    class=\"clue {custom}\"\n    class:is-disable-highlight=\"{isDisableHighlight}\"\n    class:is-number-focused=\"{isNumberFocused}\"\n    class:is-direction-focused=\"{isDirectionFocused}\"\n    class:is-filled=\"{isFilled}\"\n    on:click=\"{onFocus}\">\n    <strong>{number}</strong>\n    {clue}\n  </button>\n</li>\n\n<style>\n  button {\n    display: flex;\n    width: 100%;\n    background: none;\n    text-align: left;\n    -webkit-appearance: none;\n       -moz-appearance: none;\n            appearance: none;\n    outline: none;\n    border: none;\n    border-left: 6px solid transparent;\n    padding: 0.5em;\n    cursor: pointer;\n    line-height: 1.325;\n    color: var(--main-color);\n    font-family: var(--font);\n    font-size: 1em;\n    cursor: pointer;\n  }\n\n  strong {\n    min-width: 1.25em;\n    display: inline-block;\n    text-align: right;\n    margin-right: 0.5em;\n  }\n\n  .clue:focus:not(.is-disable-highlight) {\n    border-color: var(--secondary-highlight-color);\n  }\n  .is-number-focused:not(.is-disable-highlight) {\n    border-left-color: var(--secondary-highlight-color);\n  }\n  .is-number-focused.is-direction-focused:not(.is-disable-highlight) {\n    background: var(--secondary-highlight-color);\n  }\n  .is-filled {\n    opacity: 0.5;\n  }</style>\n",
    "<script>\n  import { createEventDispatcher } from \"svelte\";\n  const dispatch = createEventDispatcher();\n\n  export let currentClue = {};\n  $: clue = currentClue[\"clue\"];\n  $: custom = currentClue[\"custom\"] || \"\";\n</script>\n\n<div class=\"bar {custom}\">\n  <button on:click=\"{() => dispatch('nextClue', currentClue.index - 1)}\">\n    <svg\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      stroke-width=\"2\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n      class=\"feather feather-chevron-left\">\n      <polyline points=\"15 18 9 12 15 6\"></polyline>\n    </svg>\n  </button>\n  <p>{clue}</p>\n  <button on:click=\"{() => dispatch('nextClue', currentClue.index + 1)}\">\n    <svg\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      stroke-width=\"2\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n      class=\"feather feather-chevron-right\">\n      <polyline points=\"9 18 15 12 9 6\"></polyline>\n    </svg>\n  </button>\n</div>\n\n<style>\n  .bar {\n    width: 100%;\n    display: flex;\n    justify-content: space-between;\n    background-color: var(--secondary-highlight-color);\n    align-items: center;\n  }\n\n  p {\n    padding: 0 1em;\n    line-height: 1.325;\n    font-family: var(--font);\n  }\n\n  button {\n    cursor: pointer;\n    font-size: 1em;\n    border: none;\n    line-height: 1;\n    color: var(--main-color);\n    background-color: transparent;\n  }</style>\n",
    "<script>\n  import Clue from \"./Clue.svelte\";\n\n  export let direction;\n  export let clues;\n  export let focusedClueNumbers;\n  export let isDirectionFocused;\n  export let onClueFocus;\n  export let isDisableHighlight;\n</script>\n\n<p>{direction}</p>\n<div class=\"list\">\n  <ul>\n    {#each clues as clue}\n      <Clue\n        clue=\"{clue.clue}\"\n        number=\"{clue.number}\"\n        custom=\"{clue.custom}\"\n        isFilled=\"{clue.isFilled}\"\n        isNumberFocused=\"{focusedClueNumbers[direction] === clue.number}\"\n        isDirectionFocused=\"{isDirectionFocused}\"\n        isDisableHighlight=\"{isDisableHighlight}\"\n        onFocus=\"{() => onClueFocus(clue)}\" />\n    {/each}\n  </ul>\n</div>\n\n<style>\n  .list {\n    position: relative;\n    max-height: 45vh;\n    margin-bottom: 2em;\n    overflow: auto;\n  }\n\n  p {\n    font-family: var(--font);\n    color: var(--main-color);\n    font-weight: 700;\n    text-transform: uppercase;\n    padding-left: calc(2.5em + 6px);\n    padding-bottom: 0.5em;\n    font-size: 0.85em;\n    border-bottom: 1px solid var(--accent-color);\n    margin: 0;\n  }\n\n  ul {\n    list-style-type: none;\n    padding-left: 0;\n    margin: 0;\n    margin-top: 1em;\n  }\n\n  ::-moz-scrollbar {\n    width: 9px;\n  }\n  ::-webkit-scrollbar {\n    width: 9px;\n  }\n\n  ::-moz-scrollbar-track {\n    box-shadow: none;\n    border-radius: 8px;\n    background-color: var(--accent-color);\n  }\n  ::-webkit-scrollbar-track {\n    box-shadow: none;\n    border-radius: 8px;\n    background-color: var(--accent-color);\n  }\n  ::scrollbar-thumb {\n    border-radius: 8px;\n    background-color: var(--scrollbar-color);\n    box-shadow: none;\n  }\n  ::-moz-scrollbar-thumb {\n    background-color: var(--scrollbar-color);\n    border-radius: 6px;\n  }\n  ::-webkit-scrollbar-thumb {\n    background-color: var(--scrollbar-color);\n    border-radius: 6px;\n  }</style>\n",
    "<script>\n  import ClueList from \"./ClueList.svelte\";\n  import ClueBar from \"./ClueBar.svelte\";\n\n  export let clues;\n  export let cellIndexMap;\n  export let focusedDirection;\n  export let focusedCellIndex;\n  export let focusedCell;\n  export let stacked;\n  export let isDisableHighlight;\n  export let isLoaded;\n\n  $: focusedClueNumbers = focusedCell.clueNumbers || {};\n  $: currentClue =\n    clues.find(\n      c =>\n        c.direction === focusedDirection &&\n        c.number === focusedClueNumbers[focusedDirection]\n    ) || {};\n\n  function onClueFocus({ direction, id }) {\n    focusedDirection = direction;\n    focusedCellIndex = cellIndexMap[id] || 0;\n  }\n\n  function onNextClue({ detail }) {\n    let next = detail;\n    if (next < 0) next = clues.length - 1;\n    else if (next > clues.length - 1) next = 0;\n    const { direction, id } = clues[next];\n    onClueFocus({ direction, id });\n  }\n</script>\n\n<section class=\"clues\" class:stacked class:is-loaded=\"{isLoaded}\">\n  <div class=\"clues--stacked\">\n    <ClueBar {currentClue} on:nextClue=\"{onNextClue}\" />\n  </div>\n\n  <div class=\"clues--list\">\n    {#each ['across', 'down'] as direction}\n      <ClueList\n        {direction}\n        {focusedClueNumbers}\n        clues=\"{clues.filter(d => d.direction === direction)}\"\n        isDirectionFocused=\"{focusedDirection === direction}\"\n        {isDisableHighlight}\n        {onClueFocus} />\n    {/each}\n  </div>\n</section>\n\n<style>\n  section {\n    position: -webkit-sticky;\n    position: sticky;\n    top: 1em;\n    flex: 0 1 16em;\n    height: -webkit-fit-content;\n    height: -moz-fit-content;\n    height: fit-content;\n    margin: 0;\n    margin-right: 1em;\n  }\n\n  section.is-loaded.stacked {\n    position: static;\n    height: auto;\n    top: auto;\n    display: block;\n    margin: 1em 0;\n    flex: auto;\n  }\n\n  .clues--stacked {\n    margin: 0;\n    display: none;\n  }\n\n  .is-loaded.stacked .clues--stacked {\n    display: block;\n  }\n\n  .is-loaded.stacked .clues--list {\n    display: none;\n  }\n\n  @media only screen and (max-width: 720px) {\n    section:not(.is-loaded) {\n      position: static;\n      height: auto;\n      top: auto;\n      display: block;\n      margin: 1em 0;\n      flex: auto;\n    }\n\n    .clues--stacked:not(.is-loaded) {\n      display: block;\n    }\n\n    .clues--list:not(.is-loaded) {\n      display: none;\n    }\n  }</style>\n",
    "<script>\n  import { fade } from \"svelte/transition\";\n  import Confetti from \"./Confetti.svelte\";\n\n  export let showConfetti = true;\n\n  let isOpen = true;\n</script>\n\n{#if isOpen}\n  <div class=\"completed\" transition:fade=\"{{ y: 20 }}\">\n    <div class=\"content\">\n      <div class=\"message\">\n        <slot />\n      </div>\n\n      <button on:click=\"{() => (isOpen = false)}\">View puzzle</button>\n    </div>\n\n    {#if showConfetti}\n      <div class=\"confetti\">\n        <Confetti />\n      </div>\n    {/if}\n  </div>\n  <div\n    class=\"curtain\"\n    transition:fade=\"{{ duration: 250 }}\"\n    on:click=\"{() => (isOpen = false)}\"></div>\n{/if}\n\n<style>\n  .completed {\n    position: absolute;\n    top: min(50%, 15em);\n    left: 50%;\n    background-color: var(--bg-color);\n    transform: translate(-50%, -50%);\n    border-radius: 4px;\n    z-index: 100;\n    box-shadow: 0 4px 8px 4px rgba(0, 0, 0, 0.2);\n    font-family: var(--font);\n  }\n\n  .curtain {\n    position: absolute;\n    top: 0;\n    right: -2px;\n    bottom: 0;\n    left: 0;\n    background-color: var(--bg-color);\n    opacity: 0.9;\n    cursor: pointer;\n    z-index: 1;\n  }\n\n  button {\n    cursor: pointer;\n    margin-left: 1em;\n    font-size: 1em;\n    font-family: var(--font);\n    background-color: var(--accent-color);\n    border-radius: 4px;\n    color: var(--main-color);\n    padding: 0.75em;\n    border: none;\n    font-weight: 400;\n    transition: background-color 150ms;\n  }\n\n  button:hover {\n    background-color: var(--secondary-highlight-color);\n  }\n\n  .content {\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    padding: 2em;\n  }\n\n  .message {\n    margin-bottom: 1em;\n  }\n\n  .confetti {\n    position: absolute;\n    top: 30%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n  }</style>\n",
    "<script>\n  import { quadIn } from \"svelte/easing\";\n\n  export let numberOfElements = 50;\n  export let durationInSeconds = 2;\n  export let colors = [\n    \"#fff\",\n    \"#c7ecee\",\n    \"#778beb\",\n    \"#f7d794\",\n    \"#63cdda\",\n    \"#cf6a87\",\n    \"#e77f67\",\n    \"#786fa6\",\n    \"#FDA7DF\",\n    \"#4b7bec\",\n    \"#475c83\",\n  ];\n\n  const pickFrom = (arr) => arr[Math.round(Math.random() * arr.length)];\n  const randomNumber = (min, max) => Math.random() * (max - min) + min;\n  const getManyOf = (str) => new Array(30).fill(0).map(() => str);\n\n  const elementOptions = [\n    ...getManyOf(`<circle r=\"3\" />`),\n    ...getManyOf(\n      `<path d=\"M3.83733 4.73234C4.38961 4.73234 4.83733 4.28463 4.83733 3.73234C4.83733 3.18006 4.38961 2.73234 3.83733 2.73234C3.28505 2.73234 2.83733 3.18006 2.83733 3.73234C2.83733 4.28463 3.28505 4.73234 3.83733 4.73234ZM3.83733 6.73234C5.49418 6.73234 6.83733 5.38919 6.83733 3.73234C6.83733 2.07549 5.49418 0.732341 3.83733 0.732341C2.18048 0.732341 0.83733 2.07549 0.83733 3.73234C0.83733 5.38919 2.18048 6.73234 3.83733 6.73234Z\" />`\n    ),\n    ...getManyOf(\n      `<path d=\"M4.29742 2.26041C3.86864 2.1688 3.20695 2.21855 2.13614 3.0038C1.69078 3.33041 1.06498 3.23413 0.738375 2.78876C0.411774 2.3434 0.508051 1.7176 0.953417 1.39099C2.32237 0.387097 3.55827 0.0573281 4.71534 0.304565C5.80081 0.536504 6.61625 1.24716 7.20541 1.78276C7.28295 1.85326 7.35618 1.92051 7.4263 1.9849C7.64841 2.18888 7.83929 2.36418 8.03729 2.52315C8.29108 2.72692 8.48631 2.8439 8.64952 2.90181C8.7915 2.95219 8.91895 2.96216 9.07414 2.92095C9.24752 2.8749 9.5134 2.7484 9.88467 2.42214C10.2995 2.05757 10.9314 2.09833 11.2959 2.51319C11.6605 2.92805 11.6198 3.5599 11.2049 3.92447C10.6816 4.38435 10.1478 4.70514 9.58752 4.85394C9.00909 5.00756 8.469 4.95993 7.9807 4.78667C7.51364 4.62093 7.11587 4.34823 6.78514 4.08268C6.53001 3.87783 6.27248 3.64113 6.04114 3.4285C5.97868 3.37109 5.91814 3.31544 5.86006 3.26264C5.25645 2.7139 4.79779 2.36733 4.29742 2.26041Z\" />`\n    ),\n    ...getManyOf(`<rect width=\"4\" height=\"4\" x=\"-2\" y=\"-2\" />`),\n    `<path d=\"M -5 5 L 0 -5 L 5 5 Z\" />`,\n    ...\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n      .split(\"\")\n      .map((letter) => `<text style=\"font-weight: 700\">${letter}</text>`),\n  ];\n\n  const allElements = new Array(numberOfElements)\n    .fill(0)\n    .map((_, i) => [pickFrom(elementOptions), pickFrom(colors), Math.random()]);\n</script>\n\n<svg class=\"confetti\" viewBox=\"-10 -10 10 10\">\n  {#each allElements as [element, color, scale], i}\n    <g style=\"transform: scale({scale})\">\n      <g\n        fill=\"{color}\"\n        style=\"{[`--rotation: ${Math.random() * 360}deg`, `animation-delay: ${quadIn(i / numberOfElements)}s`, `animation-duration: ${durationInSeconds * randomNumber(0.7, 1)}s`].join(';')}\">\n        {@html element}\n      </g>\n    </g>\n  {/each}\n</svg>\n\n<style>\n  .confetti {\n    width: 2em;\n    position: absolute;\n    stroke-linecap: round;\n    stroke-linejoin: round;\n    fill-rule: evenodd;\n    clip-rule: evenodd;\n    pointer-events: none;\n    overflow: visible;\n    transform: translate(-50%, -50%);\n  }\n  @-webkit-keyframes pop {\n    0% {\n      transform: rotate(var(--rotation)) scale(1) translate(0em, 0em);\n    }\n    100% {\n      transform: rotate(calc(var(--rotation) + 60deg)) scale(0)\n        translate(9em, 9em);\n      fill: white;\n    }\n  }\n  @keyframes pop {\n    0% {\n      transform: rotate(var(--rotation)) scale(1) translate(0em, 0em);\n    }\n    100% {\n      transform: rotate(calc(var(--rotation) + 60deg)) scale(0)\n        translate(9em, 9em);\n      fill: white;\n    }\n  }\n  g {\n    transition: all 0.5s ease-out;\n    transform: rotate(var(--rotation)) scale(0) translate(0, 0);\n    -webkit-animation: pop 2s ease-out;\n            animation: pop 2s ease-out;\n    -webkit-animation-iteration-count: infinite;\n            animation-iteration-count: infinite;\n  }</style>\n",
    "<script>\n  import { onMount } from \"svelte\";\n  import Toolbar from \"./Toolbar.svelte\";\n  import Puzzle from \"./Puzzle.svelte\";\n  import Clues from \"./Clues.svelte\";\n  import CompletedMessage from \"./CompletedMessage.svelte\";\n  import createClues from \"./helpers/createClues.js\";\n  import createCells from \"./helpers/createCells.js\";\n  import validateClues from \"./helpers/validateClues.js\";\n  import { fromPairs } from \"./helpers/utils.js\";\n  import themeStyles from \"./helpers/themeStyles.js\";\n\n  export let data = [];\n  export let actions = [\"clear\", \"reveal\", \"check\"];\n  export let theme = \"classic\";\n  export let revealDuration = 1000;\n  export let breakpoint = 720;\n  export let revealed = false;\n  export let disableHighlight = false;\n  export let showCompleteMessage = true;\n  export let showConfetti = true;\n  export let showKeyboard;\n  export let keyboardStyle = \"outline\";\n\n  let width = 0;\n  let focusedDirection = \"across\";\n  let focusedCellIndex = 0;\n  let isRevealing = false;\n  let isLoaded = false;\n  let isChecking = false;\n  let revealTimeout;\n  let clueCompletion;\n\n  let originalClues = [];\n  let validated = [];\n  let clues = [];\n  let cells = [];\n\n  const onDataUpdate = () => {\n    originalClues = createClues(data);\n    validated = validateClues(originalClues);\n    clues = originalClues.map((d) => ({ ...d }));\n    cells = createCells(originalClues);\n    reset();\n  };\n\n  $: data, onDataUpdate();\n  $: focusedCell = cells[focusedCellIndex] || {};\n  $: cellIndexMap = fromPairs(cells.map((cell) => [cell.id, cell.index]));\n  $: percentCorrect =\n    cells.filter((d) => d.answer === d.value).length / cells.length;\n  $: isComplete = percentCorrect == 1;\n  $: isDisableHighlight = isComplete && disableHighlight;\n  $: cells, (clues = checkClues());\n  $: cells, (revealed = !clues.filter((d) => !d.isCorrect).length);\n  $: stacked = width < breakpoint;\n  $: inlineStyles = themeStyles[theme];\n\n  onMount(() => {\n    isLoaded = true;\n  });\n\n  function checkClues() {\n    return clues.map((d) => {\n      const index = d.index;\n      const cellChecks = d.cells.map((c) => {\n        const { value } = cells.find((e) => e.id === c.id);\n        const hasValue = !!value;\n        const hasCorrect = value === c.answer;\n        return { hasValue, hasCorrect };\n      });\n      const isCorrect =\n        cellChecks.filter((c) => c.hasCorrect).length === d.answer.length;\n      const isFilled =\n        cellChecks.filter((c) => c.hasValue).length === d.answer.length;\n      return {\n        ...d,\n        isCorrect,\n        isFilled,\n      };\n    });\n  }\n\n  function reset() {\n    isRevealing = false;\n    isChecking = false;\n    focusedCellIndex = 0;\n    focusedDirection = \"across\";\n  }\n\n  function onClear() {\n    reset();\n    if (revealTimeout) clearTimeout(revealTimeout);\n    cells = cells.map((cell) => ({\n      ...cell,\n      value: \"\",\n    }));\n  }\n\n  function onReveal() {\n    if (revealed) return true;\n    reset();\n    cells = cells.map((cell) => ({\n      ...cell,\n      value: cell.answer,\n    }));\n    startReveal();\n  }\n\n  function onCheck() {\n    isChecking = true;\n  }\n\n  function startReveal() {\n    isRevealing = true;\n    isChecking = false;\n    if (revealTimeout) clearTimeout(revealTimeout);\n    revealTimeout = setTimeout(() => {\n      isRevealing = false;\n    }, revealDuration + 250);\n  }\n\n  function onToolbarEvent({ detail }) {\n    if (detail === \"clear\") onClear();\n    else if (detail === \"reveal\") onReveal();\n    else if (detail === \"check\") onCheck();\n  }\n</script>\n\n{#if validated}\n  <article\n    class=\"svelte-crossword\"\n    bind:offsetWidth=\"{width}\"\n    style=\"{inlineStyles}\">\n    <slot\n      name=\"toolbar\"\n      onClear=\"{onClear}\"\n      onReveal=\"{onReveal}\"\n      onCheck=\"{onCheck}\">\n      <Toolbar actions=\"{actions}\" on:event=\"{onToolbarEvent}\" />\n    </slot>\n\n    <div class=\"play\" class:stacked class:is-loaded=\"{isLoaded}\">\n      <Clues\n        clues=\"{clues}\"\n        cellIndexMap=\"{cellIndexMap}\"\n        stacked=\"{stacked}\"\n        isDisableHighlight=\"{isDisableHighlight}\"\n        isLoaded=\"{isLoaded}\"\n        bind:focusedCellIndex\n        bind:focusedCell\n        bind:focusedDirection />\n      <Puzzle\n        clues=\"{clues}\"\n        focusedCell=\"{focusedCell}\"\n        isRevealing=\"{isRevealing}\"\n        isChecking=\"{isChecking}\"\n        isDisableHighlight=\"{isDisableHighlight}\"\n        revealDuration=\"{revealDuration}\"\n        showKeyboard=\"{showKeyboard}\"\n        stacked=\"{stacked}\"\n        isLoaded=\"{isLoaded}\"\n        keyboardStyle=\"{keyboardStyle}\"\n        bind:cells\n        bind:focusedCellIndex\n        bind:focusedDirection />\n    </div>\n\n    {#if isComplete && !isRevealing && showCompleteMessage}\n      <CompletedMessage showConfetti=\"{showConfetti}\">\n        <slot name=\"message\">\n          <h3>You solved it!</h3>\n        </slot>\n      </CompletedMessage>\n    {/if}\n  </article>\n{/if}\n\n<style>\n  article {\n    position: relative;\n    background-color: transparent;\n    font-size: 16px;\n  }\n\n  .play {\n    display: flex;\n    flex-direction: var(--order, row);\n  }\n\n  .play.is-loaded.stacked {\n    flex-direction: column;\n  }\n\n  h3 {\n    margin: 0;\n    margin-bottom: 0.5em;\n  }\n\n  @media only screen and (max-width: 720px) {\n    .play:not(.is-loaded) {\n      flex-direction: column;\n    }\n  }</style>\n",
    "<script>\n  import { onMount } from \"svelte\";\n  import Keyboard from \"svelte-keyboard\";\n  import getSecondarilyFocusedCells from \"./helpers/getSecondarilyFocusedCells.js\";\n  import getCellAfterDiff from \"./helpers/getCellAfterDiff.js\";\n  import checkMobile from \"./helpers/checkMobile.js\";\n\n  import Cell from \"./Cell.svelte\";\n\n  export let clues;\n  export let cells;\n  export let focusedDirection;\n  export let focusedCellIndex;\n  export let focusedCell;\n  export let isRevealing;\n  export let isChecking;\n  export let isDisableHighlight;\n  export let stacked;\n  export let revealDuration = 0;\n  export let showKeyboard;\n  export let isLoaded;\n  export let keyboardStyle;\n\n  let element;\n  let cellsHistoryIndex = 0;\n  let cellsHistory = [];\n  let focusedCellIndexHistoryIndex = 0;\n  let focusedCellIndexHistory = [];\n  let secondarilyFocusedCells = [];\n  let isMobile = false;\n  let isPuzzleFocused = false;\n\n  const numberOfStatesInHistory = 10;\n  $: w = Math.max(...cells.map((d) => d.x)) + 1;\n  $: h = Math.max(...cells.map((d) => d.y)) + 1;\n  $: keyboardVisible =\n    typeof showKeyboard === \"boolean\" ? showKeyboard : isMobile;\n\n  $: cells, focusedCellIndex, focusedDirection, updateSecondarilyFocusedCells();\n  $: sortedCellsInDirection = [...cells].sort((a, b) =>\n    focusedDirection == \"down\" ? a.x - b.x || a.y - b.y : a.y - b.y || a.x - b.x\n  );\n\n  onMount(() => {\n    isMobile = checkMobile();\n  });\n\n  function updateSecondarilyFocusedCells() {\n    secondarilyFocusedCells = getSecondarilyFocusedCells({\n      cells,\n      focusedDirection,\n      focusedCell,\n    });\n  }\n\n  function onCellUpdate(index, newValue, diff = 1, doReplaceFilledCells) {\n    doReplaceFilledCells = doReplaceFilledCells || !!cells[index].value;\n\n    const dimension = focusedDirection == \"across\" ? \"x\" : \"y\";\n    const clueIndex = cells[index].clueNumbers[focusedDirection];\n    const cellsInClue = cells.filter(\n      (cell) =>\n        cell.clueNumbers[focusedDirection] == clueIndex &&\n        (doReplaceFilledCells || !cell.value)\n    );\n    const cellsInCluePositions = cellsInClue\n      .map((cell) => cell[dimension])\n      .filter(Number.isFinite);\n    const isAtEndOfClue =\n      cells[index][dimension] == Math.max(...cellsInCluePositions);\n\n    const newCells = [\n      ...cells.slice(0, index),\n      { ...cells[index], value: newValue },\n      ...cells.slice(index + 1),\n    ];\n    cellsHistory = [newCells, ...cellsHistory.slice(cellsHistoryIndex)].slice(\n      0,\n      numberOfStatesInHistory\n    );\n    cellsHistoryIndex = 0;\n    cells = newCells;\n\n    if (isAtEndOfClue && diff > 0) {\n      onFocusClueDiff(diff);\n    } else {\n      onFocusCellDiff(diff, doReplaceFilledCells);\n    }\n  }\n\n  function onHistoricalChange(diff) {\n    cellsHistoryIndex += -diff;\n    cells = cellsHistory[cellsHistoryIndex] || cells;\n    focusedCellIndexHistoryIndex += -diff;\n    focusedCellIndex =\n      focusedCellIndexHistory[cellsHistoryIndex] || focusedCellIndex;\n  }\n\n  function onFocusCell(index) {\n    if (isPuzzleFocused && index == focusedCellIndex) {\n      onFlipDirection();\n    } else {\n      focusedCellIndex = index;\n      focusedCellIndexHistory = [\n        index,\n        ...focusedCellIndexHistory.slice(0, numberOfStatesInHistory),\n      ];\n      focusedCellIndexHistoryIndex = 0;\n    }\n  }\n\n  function onFocusCellDiff(diff, doReplaceFilledCells = true) {\n    const sortedCellsInDirectionFiltered = sortedCellsInDirection.filter((d) =>\n      doReplaceFilledCells ? true : !d.value\n    );\n    const currentCellIndex = sortedCellsInDirectionFiltered.findIndex(\n      (d) => d.index == focusedCellIndex\n    );\n    const nextCellIndex = (\n      sortedCellsInDirectionFiltered[currentCellIndex + diff] || {}\n    ).index;\n    const nextCell = cells[nextCellIndex];\n    if (!nextCell) return;\n    onFocusCell(nextCellIndex);\n  }\n\n  function onFocusClueDiff(diff = 1) {\n    const currentNumber = focusedCell.clueNumbers[focusedDirection];\n    let nextCluesInDirection = clues.filter(\n      (clue) =>\n        !clue.isFilled &&\n        (diff > 0\n          ? clue.number > currentNumber\n          : clue.number < currentNumber) &&\n        clue.direction == focusedDirection\n    );\n    if (diff < 0) {\n      nextCluesInDirection = nextCluesInDirection.reverse();\n    }\n    let nextClue = nextCluesInDirection[Math.abs(diff) - 1];\n    if (!nextClue) {\n      onFlipDirection();\n      nextClue = clues.filter((clue) => clue.direction == focusedDirection)[0];\n    }\n    const nextFocusedCell =\n      sortedCellsInDirection.find(\n        (cell) =>\n          !cell.value && cell.clueNumbers[focusedDirection] == nextClue.number\n      ) || {};\n    focusedCellIndex = nextFocusedCell.index || 0;\n  }\n\n  function onMoveFocus(direction, diff) {\n    if (focusedDirection != direction) {\n      const dimension = direction == \"across\" ? \"x\" : \"y\";\n      focusedDirection = direction;\n    } else {\n      const nextCell = getCellAfterDiff({\n        diff,\n        cells,\n        direction,\n        focusedCell,\n      });\n      if (!nextCell) return;\n      onFocusCell(nextCell.index);\n    }\n  }\n\n  function onFlipDirection() {\n    const newDirection = focusedDirection === \"across\" ? \"down\" : \"across\";\n    const hasClueInNewDirection = !!focusedCell[\"clueNumbers\"][newDirection];\n    if (hasClueInNewDirection) focusedDirection = newDirection;\n  }\n\n  function onKeydown({ detail }) {\n    const diff = detail === \"Backspace\" ? -1 : 1;\n    const value = detail === \"Backspace\" ? \"\" : detail;\n    onCellUpdate(focusedCellIndex, value, diff);\n  }\n\n  function onClick() {\n    isPuzzleFocused = element.contains(document.activeElement);\n  }\n</script>\n\n<svelte:window on:click=\"{onClick}\" />\n\n<section\n  class=\"puzzle\"\n  class:stacked\n  class:is-loaded=\"{isLoaded}\"\n  bind:this=\"{element}\">\n  <svg viewBox=\"0 0 {w} {h}\">\n    {#each cells as { x, y, value, answer, index, number, custom }}\n      <Cell\n        x=\"{x}\"\n        y=\"{y}\"\n        index=\"{index}\"\n        value=\"{value}\"\n        answer=\"{answer}\"\n        number=\"{number}\"\n        custom=\"{custom}\"\n        changeDelay=\"{isRevealing ? (revealDuration / cells.length) * index : 0}\"\n        isRevealing=\"{isRevealing}\"\n        isChecking=\"{isChecking}\"\n        isFocused=\"{focusedCellIndex == index && !isDisableHighlight}\"\n        isSecondarilyFocused=\"{secondarilyFocusedCells.includes(index) && !isDisableHighlight}\"\n        onFocusCell=\"{onFocusCell}\"\n        onCellUpdate=\"{onCellUpdate}\"\n        onFocusClueDiff=\"{onFocusClueDiff}\"\n        onMoveFocus=\"{onMoveFocus}\"\n        onFlipDirection=\"{onFlipDirection}\"\n        onHistoricalChange=\"{onHistoricalChange}\" />\n    {/each}\n  </svg>\n</section>\n\n{#if keyboardVisible}\n  <div class=\"keyboard\">\n    <Keyboard\n      layout=\"crossword\"\n      style=\"{keyboardStyle}\"\n      on:keydown=\"{onKeydown}\" />\n  </div>\n{/if}\n\n<style>\n  section {\n    position: -webkit-sticky;\n    position: sticky;\n    top: 1em;\n    order: 0;\n    flex: 1;\n    height: -webkit-fit-content;\n    height: -moz-fit-content;\n    height: fit-content;\n  }\n\n  section.is-loaded.stacked {\n    position: relative;\n    top: auto;\n    height: auto;\n    order: -1;\n  }\n\n  svg {\n    width: 100%;\n    display: block;\n    font-size: 1px;\n    background: var(--main-color);\n    border: 4px solid var(--main-color);\n    box-sizing: border-box;\n  }\n\n  .keyboard {\n    order: 3;\n  }\n\n  @media only screen and (max-width: 720px) {\n    section:not(.is-loaded) {\n      position: relative;\n      top: auto;\n      height: auto;\n      order: -1;\n    }\n  }</style>\n",
    "<script>\n  import { createEventDispatcher } from \"svelte\";\n  const dispatch = createEventDispatcher();\n\n  export let actions = [\"clear\", \"reveal\", \"check\"];\n</script>\n\n<div class=\"toolbar\">\n  {#each actions as action}\n    {#if action === 'clear'}\n      <button on:click=\"{() => dispatch('event', 'clear')}\">Clear</button>\n    {:else if action === 'reveal'}\n      <button on:click=\"{() => dispatch('event', 'reveal')}\">Reveal</button>\n    {:else if action === 'check'}\n      <button on:click=\"{() => dispatch('event', 'check')}\">Check</button>\n    {/if}\n  {/each}\n</div>\n\n<style>\n  .toolbar {\n    margin-bottom: 1em;\n    padding: 1em 0;\n    display: flex;\n    justify-content: flex-end;\n    font-family: var(--font);\n    font-size: 0.85em;\n    background-color: transparent;\n  }\n\n  button {\n    cursor: pointer;\n    margin-left: 1em;\n    font-size: 1em;\n    font-family: var(--font);\n    background-color: var(--accent-color);\n    border-radius: 4px;\n    color: var(--main-color);\n    padding: 0.75em;\n    border: none;\n    font-weight: 400;\n    transition: background-color 150ms;\n  }\n\n  button:hover {\n    background-color: var(--secondary-highlight-color);\n  }</style>\n",
    "<script>\n  import { createEventDispatcher } from \"svelte\";\n  import standard from \"./layouts/standard.js\";\n  import crossword from \"./layouts/crossword.js\";\n\n  import backspaceSVG from \"./svg/backspace.js\";\n  import enterSVG from \"./svg/enter.js\";\n\n  const dispatch = createEventDispatcher();\n\n  export let custom;\n  export let style = \"\";\n  export let layout = \"standard\";\n\n  let page = 0;\n  let shifted = false;\n\n  const alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n  const layouts = { standard, crossword };\n\n  const swaps = {\n    Page0: \"abc\",\n    Page1: \"?123\",\n    Space: \" \",\n    Shift: \"abc\",\n    Enter: enterSVG,\n    Backspace: backspaceSVG,\n  };\n\n  const unique = (arr) => [...new Set(arr)];\n\n  $: rawData = custom || layouts[layout];\n  $: data = rawData.map((d) => {\n    let display = d.display;\n    if (swaps[d.value]) display = swaps[d.value];\n    if (!display) display = shifted ? d.value.toUpperCase() : d.value;\n    if (d.value === \"Shift\")\n      display = shifted ? swaps[d.value] : swaps[d.value].toUpperCase();\n    return {\n      ...d,\n      display,\n    };\n  });\n\n  $: page0 = data.filter((d) => !d.page);\n  $: page1 = data.filter((d) => d.page);\n\n  $: rows0 = unique(page0.map((d) => d.row));\n  $: rows0, rows0.sort((a, b) => a - b);\n\n  $: rows1 = unique(page1.map((d) => d.row));\n  $: rows1, rows1.sort((a, b) => a - b);\n\n  $: rowData0 = rows0.map((r) => page0.filter((k) => k.row === r));\n  $: rowData1 = rows0.map((r) => page1.filter((k) => k.row === r));\n  $: rowData = [rowData0, rowData1];\n  $: maxInRow0 = Math.max(...rowData0.map((r) => r.length));\n  $: maxInRow1 = Math.max(...rowData1.map((r) => r.length));\n  $: maxInRow = Math.max(maxInRow0, maxInRow1);\n  $: percentWidth = `${(1 / maxInRow) * 100}%`;\n\n  function onKey(value, event) {\n    event.preventDefault();\n    if (value.includes(\"Page\")) {\n      page = +value.substr(-1);\n    } else if (value === \"Shift\") {\n      shifted = !shifted;\n    } else {\n      let output = value;\n      if (shifted && alphabet.includes(value)) output = value.toUpperCase();\n      if (value === \"Space\") output = \" \";\n      dispatch(\"keydown\", output);\n    }\n    event.stopPropagation();\n    return false;\n  }\n</script>\n\n<div class=\"keyboard\">\n  {#each rowData as row, i}\n    <div class=\"page\" class:visible=\"{i === page}\">\n      {#each row as keys}\n        <div class=\"row row--{i}\">\n          {#each keys as { value, display }}\n            <button\n              style=\"--w: {percentWidth};\"\n              class=\"{style} key--{value}\"\n              class:single=\"{value.length === 1}\"\n              on:touchstart=\"{(e) => onKey(value, e)}\"\n              on:mousedown=\"{(e) => onKey(value, e)}\">\n              {#if display.includes('<svg')}\n                {@html display}\n              {:else}{display}{/if}\n            </button>\n          {/each}\n        </div>\n      {/each}\n    </div>\n  {/each}\n</div>\n\n<style>\n  .row {\n    display: flex;\n    justify-content: center;\n  }\n\n  button {\n    display: inline-block;\n    font-family: sans-serif;\n    font-size: 1em;\n    text-align: center;\n    padding: 0.5em;\n    margin: 0.1em;\n    border-radius: 2px;\n    background-color: #efefef;\n    border: none;\n    cursor: pointer;\n    line-height: 1;\n    vertical-align: baseline;\n    width: var(--w);\n  }\n\n  button.depth {\n    box-shadow: 1px 1px 1px 1px rgba(0, 0, 0, 0.25);\n    margin: 0.2em;\n  }\n\n  button.outline {\n    border: 1px solid rgba(0, 0, 0, 0.25);\n  }\n\n  button:active {\n    transform: scale(2);\n    background-color: #cdcdcd;\n  }\n\n  button.single {\n    padding: 0.5em 0;\n  }\n\n  .page {\n    display: none;\n  }\n\n  .page.visible {\n    display: block;\n  }\n\n  button.key--Space {\n    width: 20%;\n  }\n\n  button.key--Page0,\n  button.key--Page1,\n  button.key--Shift,\n  button.key--Backspace,\n  button.key--Enter {\n    width: auto;\n    min-width: var(--w);\n  }</style>\n",
    "<script>\n  export let name;\n\n  const data = {\n    email: {\n      src: \"email.jpg\",\n      alt: \"Screenshot of an email from a tweet\",\n      caption:\n        \"Letter to the editor of the USA Today crossword screenshot from <a href=https://twitter.com/smileyb97/status/1228105944061685760>a tweet.</a>\",\n    },\n    mukbang: {\n      src: \"mukbang.jpg\",\n      alt: \"Screenshot of two people eating oreos with mustard\",\n      caption:\n        \"Shay Mitchell tries an Oreo with mustard on <a href=https://www.youtube.com/watch?v=FA1FCW_DmEI?t=83>YouTube.</a>\",\n    },\n  };\n</script>\n\n<figure>\n  <img src=\"assets/img/{data[name].src}\" alt=\"{data[name].alt}\" />\n  <figcaption>\n    {@html data[name].caption}\n  </figcaption>\n</figure>\n\n<style>\n  img {\n    border-radius: 4px;\n    box-shadow: 0 0 4px 0px var(--fg);\n  }\n  figcaption {\n    margin-top: 0.5em;\n    font-style: italic;\n  }</style>\n",
    "<script>\n  import wordmark from \"../svg/wordmark.svg\";\n  import Icon from \"./helpers/Icon.svelte\";\n  export let hed;\n  export let intro;\n</script>\n\n<section id=\"intro\">\n  <div class=\"wordmark\">\n    <a href=\"https://pudding.cool\">{@html wordmark}</a>\n  </div>\n\n  <h1>{hed}</h1>\n\n  <div class=\"byline\">\n    <time>December 2020</time>\n    &nbsp;|&nbsp;\n    <p>\n      <a href=\"https://pudding.cool/author/russell-goldenberg\">Russell\n        Goldenberg</a>\n    </p>\n  </div>\n\n  <h3>{intro}</h3>\n\n  <p style=\"margin-top: 2rem;\">Arrow Key right.</p>\n  <button><Icon name=\"triangle\" direction=\"e\" /></button>\n</section>\n\n<style>\n  section {\n    margin: 0 auto;\n    max-width: 50em;\n    padding: 1rem;\n  }\n\n  .wordmark {\n    max-width: 10em;\n    margin: 1em auto;\n  }\n\n  h1 {\n    font-weight: var(--bold);\n    line-height: 1;\n    font-size: 1.5em;\n  }\n\n  h3 {\n    font-size: 6vh;\n  }\n\n  .byline {\n    display: flex;\n    font-size: 2vh;\n    align-items: center;\n  }\n\n  .byline p {\n    margin: 0;\n    line-height: 1;\n  }\n\n  button {\n    font-size: 2em;\n    background: none;\n    color: var(--fg);\n  }</style>\n",
    "<script>\n  import NavLevel from \"./NavLevel.svelte\";\n  import { visibleIndex } from \"../stores/nav.js\";\n\n  export let levels;\n\n  $: visible = $visibleIndex > 0;\n</script>\n\n<nav class:visible>\n  {#each levels as { version, slides }, i}\n    <NavLevel version=\"{version}\" slides=\"{slides}\" index=\"{i + 1}\" on:jump />\n  {/each}\n</nav>\n\n<style>\n  nav {\n    display: flex;\n    justify-content: space-between;\n    padding: 0.5em;\n    position: fixed;\n    width: 100%;\n    top: 0;\n    left: 50%;\n    max-width: 30em;\n    opacity: 0;\n    pointer-events: none;\n    transition: opacity 150ms ease-out;\n    transform: translateX(-50%);\n  }\n  nav.visible {\n    z-index: var(--z-overlay);\n    opacity: 1;\n    pointer-events: auto;\n    transition: opacity 300ms 150ms ease-in;\n  }</style>\n",
    "<script>\n  import { createEventDispatcher } from \"svelte\";\n  export let version;\n  export let slides;\n  export let index;\n\n  const dispatch = createEventDispatcher();\n\n  const onClick = () => {\n    dispatch(\"jump\", index);\n  };\n</script>\n\n<button class=\"{version}\" on:click=\"{onClick}\">\n  <span class=\"title\">{version}</span>\n  <div class=\"cookie\"></div>\n  <div class=\"progress\">\n    {#each slides as slide}<span class=\"slide\"></span>{/each}\n  </div>\n\n  <div class=\"cookie\"></div>\n</button>\n\n<style>\n  button {\n    background: none;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    width: 6em;\n  }\n  .title {\n    margin-bottom: 0.5em;\n    text-transform: capitalize;\n    color: var(--fg);\n  }\n  .progress {\n    width: 2.5em;\n  }\n  .slide {\n    height: 3px;\n    display: block;\n    background: var(--off-white);\n  }\n  .cookie {\n    width: 3em;\n    height: 0.25em;\n    background: var(--brown);\n    border-radius: 2px;\n  }</style>\n",
    "<script>\n  export let version = \"classic\";\n  const versions = {\n    mini: {\n      w: 4,\n      t: 3,\n    },\n    classic: {\n      w: 8,\n      t: 0,\n    },\n    \"mega stuf\": {\n      w: 8,\n      t: 10,\n    },\n  };\n  let cl = version.toLowerCase().replace(\" \", \"\");\n  let cw = 1;\n  let v = versions[version];\n  $: h = Math.floor(0.9 * cw);\n  $: w = v.w;\n  $: tm = 5 + v.t;\n  $: ts = 7 + v.t;\n  $: tb = 12 + v.t;\n</script>\n\n<div class=\"outer {cl}\" style=\"height: {h}px;\">\n  <div style=\"width: {w}em;\" class=\"oreo\" bind:offsetWidth=\"{cw}\">\n    <div class=\"top\"></div>\n    <div style=\"top: {tm}%\" class=\"middle\"></div>\n    <div style=\"top: {ts}%\" class=\"shadow\"></div>\n    <div style=\"top: {tb}%\" class=\"bottom\"></div>\n  </div>\n</div>\n\n<style>\n  .outer {\n    position: relative;\n    width: 100%;\n    top: 0;\n    left: 0;\n    margin: 0 auto;\n  }\n\n  .oreo {\n    position: absolute;\n    margin: auto;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n  }\n  .top {\n    width: 100%;\n    height: 60%;\n    border-radius: 50%;\n    background-color: var(--brown);\n    position: absolute;\n    z-index: 5;\n  }\n  .middle {\n    width: 100%;\n    height: 60%;\n    border-radius: 50%;\n    background-color: var(--white);\n    background-image: none;\n    position: absolute;\n    z-index: 3;\n    top: 5%;\n  }\n  .megastuf .middle {\n    border-top-left-radius: 35%;\n    border-top-right-radius: 35%;\n  }\n  .shadow {\n    width: 100%;\n    height: 60%;\n    border-radius: 50%;\n    background-color: var(--off-white);\n    background-image: none;\n    position: absolute;\n    z-index: 2;\n    top: 7%;\n  }\n  .bottom {\n    width: 100%;\n    height: 60%;\n    border-radius: 50%;\n    background-color: var(--brown);\n    background-image: none;\n    position: absolute;\n    z-index: 1;\n    top: 12%;\n  }</style>\n",
    "<script>\n  import { SwiperSlide } from \"swiper/svelte\";\n  import Oreo from \"./Oreo.svelte\";\n  import Chart from \"./Chart.svelte\";\n  import Special from \"./Special.svelte\";\n  import Image from \"./Image.svelte\";\n  import Icon from \"./helpers/Icon.svelte\";\n\n  export let version;\n  export let level;\n  export let duration;\n  export let text;\n  export let slides;\n</script>\n\n<SwiperSlide>\n  <div class=\"slide-content intro\">\n    <p class=\"level\">Level {level}</p>\n    <p class=\"version\"><strong>{version}</strong></p>\n    <Oreo version=\"{version}\" />\n    <p class=\"duration\">~ {duration}</p>\n    <p class=\"text\">{text}</p>\n    <button>\n      <Icon name=\"triangle\" direction=\"s\" />\n    </button>\n  </div>\n</SwiperSlide>\n\n{#each slides as { text, className, chart, special, image }}\n  <SwiperSlide>\n    <div class=\"slide-content {className || ''}\">\n      {#if typeof text === 'string'}\n        <div class=\"graf\">\n          <p>\n            {@html text}\n          </p>\n        </div>\n      {:else if typeof text === 'object'}\n        <div class=\"graf\">\n          {#each text as { value }}\n            <p>\n              {@html value}\n            </p>\n          {/each}\n        </div>\n      {/if}\n\n      {#if chart}\n        <div class=\"chart\">\n          <Chart name=\"{chart}\" />\n        </div>\n      {/if}\n\n      {#if special}\n        <div class=\"special\">\n          <Special name=\"{special}\" />\n        </div>\n      {/if}\n\n      {#if image}\n        <Image name=\"{image}\" />\n      {/if}\n    </div>\n  </SwiperSlide>\n{/each}\n\n<style>\n  .slide-content {\n    padding-left: 1rem;\n    padding-right: 1rem;\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n    margin: 0 auto;\n    overflow: hidden;\n  }\n\n  .slide-content p {\n    margin: 0 auto;\n    max-width: 40em;\n  }\n\n  .intro {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    height: 100%;\n    font-size: 3vh;\n  }\n\n  .intro p {\n    margin: 0.5em 0;\n  }\n\n  .level {\n    opacity: 0.5;\n  }\n\n  .version {\n    text-transform: capitalize;\n    font-size: 2em;\n  }\n\n  .duration {\n  }\n\n  .oreo {\n    width: 16em;\n    height: 16em;\n  }\n\n  .text {\n    font-size: 1.25em;\n  }\n\n  button {\n    background: none;\n    color: var(--fg);\n    font-size: 2em;\n  }\n\n  .reverse {\n    flex-direction: column-reverse;\n  }\n\n  @media only screen and (min-width: 640px) {\n    .slide-content {\n      justify-content: center;\n    }\n  }</style>\n",
    "<script>\n  import { onMount } from \"svelte\";\n  import { csv } from \"d3-fetch\";\n  import { format } from \"d3-format\";\n  import raw from \"../../data/xd-oreo-clue-common-words-1993.csv\";\n\n  const min = 100;\n\n  const words = raw\n    .map((d) => ({ ...d, count: +d.count }))\n    .filter((d) => d.count >= min);\n\n  let clues = [];\n  let active = words[0].word;\n\n  const addMark = (str) => {\n    const start = str.toLowerCase().indexOf(active);\n    const end = start + active.length;\n    const before = str.substring(0, start);\n    const tween = str.substring(start, end);\n    const after = str.substring(end, str.length);\n    return `${before}<mark>${tween}</mark>${after}`;\n  };\n\n  $: examples = clues\n    .filter((d) => d.clue.toLowerCase().includes(active))\n    .slice(0, 20)\n    .map((d) => ({\n      ...d,\n      marked: addMark(d.clue),\n    }));\n\n  const cleanClues = (arr) => {\n    return arr.map((d) => ({\n      ...d,\n      count: +d.count,\n      percent: +d.percent,\n    }));\n  };\n\n  onMount(() => {\n    csv(\"assets/data/xd-oreo-clues-freq-1993.csv\")\n      .then(cleanClues)\n      .then((result) => (clues = result))\n      .catch((err) => {\n        console.log(err);\n      });\n  });\n</script>\n\n<div class=\"outer\">\n  <div class=\"left\">\n    <h3>Word Count</h3>\n    <ul class=\"words\">\n      {#each words as { word, count }}\n        <li class:active=\"{active === word}\">\n          <button on:click=\"{() => (active = word)}\">\n            <span class=\"word\">{word}</span>\n            <span class=\"count\">{format(',')(count)}</span>\n          </button>\n        </li>\n      {/each}\n    </ul>\n  </div>\n\n  <div class=\"right\">\n    <h3>Examples</h3>\n    <ul class=\"clues\">\n      {#each examples as { count, marked } (marked)}\n        <li>\n          {@html marked}\n        </li>\n      {/each}\n    </ul>\n  </div>\n</div>\n\n<style>\n  .outer {\n    display: flex;\n    justify-content: center;\n  }\n\n  ul {\n    margin: 0 1em;\n    list-style-type: none;\n  }\n\n  .active button {\n    background: var(--highlight);\n  }\n\n  .words {\n    width: 15em;\n  }\n\n  .words li {\n    margin-bottom: 0.5em;\n  }\n\n  .words span {\n    display: inline-block;\n  }\n\n  .word {\n    margin-right: 0.5em;\n    width: 5em;\n    text-align: left;\n  }\n\n  .count {\n    width: 3em;\n  }\n\n  .clues {\n    width: 15em;\n  }\n\n  .clues li {\n    margin-bottom: 0.5em;\n  }</style>\n",
    "<script>\n  import { onMount } from \"svelte\";\n  import { csv } from \"d3-fetch\";\n  import { format } from \"d3-format\";\n  import { scaleLinear } from \"d3-scale\";\n  import { distance } from \"fastest-levenshtein\";\n  import raw from \"../../data/xd-oreo-clue-common-words-1993.csv\";\n\n  const min = 100;\n\n  const words = raw\n    .map((d) => ({ ...d, count: +d.count }))\n    .filter((d) => d.count >= min);\n\n  let guess = \"\";\n  let clues = [];\n  let active = words[0].word;\n  let reveal;\n\n  const getGrams = (str) => {\n    return str\n      .toLowerCase()\n      .replace(/[^a-z]/g, \" \")\n      .split(\" \")\n      .map((d) => d.trim())\n      .filter((d) => d);\n  };\n\n  const compareGrams = (a, b) => {\n    if (a.length < b.length) {\n      const matches = a.filter((d) => b.includes(d)).length;\n      return matches / b.length;\n    }\n\n    const matches = b.filter((d) => a.includes(d)).length;\n    return matches / a.length;\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    const temp = clues.map((d) => ({\n      ...d,\n      scoreLev: distance(guess.toLowerCase(), d.lower),\n      scoreGram: compareGrams(guessGrams, d.grams),\n    }));\n    const lev = temp.map((d) => d.scoreLev);\n    const gram = temp.map((d) => d.scoreGram);\n\n    const minLev = Math.min(...lev);\n    const maxLev = Math.max(...lev);\n\n    const minGram = Math.min(...gram);\n    const maxGram = Math.max(...gram);\n\n    const scaleLev = scaleLinear().domain([minLev, maxLev]);\n    const scaleGram = scaleLinear().domain([maxGram, minGram]);\n\n    const rank = temp.map((d) => ({\n      ...d,\n      score: scaleLev(d.scoreLev) + scaleGram(d.scoreGram),\n    }));\n    rank.sort((a, b) => a.score - b.score);\n    clues = rank;\n    reveal = true;\n  };\n\n  const addMark = (str) => {\n    const start = str.toLowerCase().indexOf(active);\n    const end = start + active.length;\n    const before = str.substring(0, start);\n    const tween = str.substring(start, end);\n    const after = str.substring(end, str.length);\n    return `${before}<mark>${tween}</mark>${after}`;\n  };\n\n  const cleanClues = (arr) => {\n    return arr.map((d) => ({\n      ...d,\n      lower: d.clue.toLowerCase(),\n      grams: getGrams(d.clue),\n      count: +d.count,\n      percent: +d.percent,\n    }));\n  };\n\n  onMount(() => {\n    csv(\"assets/data/xd-oreo-clues-freq-1993.csv\")\n      .then(cleanClues)\n      .then((result) => (clues = result))\n      .catch((err) => {\n        console.log(err);\n      });\n  });\n\n  $: maxLength = clues ? Math.max(...clues.map((d) => d.clue.length)) : 0;\n  $: examples = clues\n    .filter((d) => d.clue.toLowerCase().includes(active))\n    .slice(0, 20)\n    .map((d) => ({\n      ...d,\n      marked: addMark(d.clue),\n    }));\n  $: guessGrams = getGrams(guess);\n  $: top = clues.slice(0, 10);\n</script>\n\n<fieldset>\n  <label for=\"clue\">How would you clue OREO?</label>\n  <input\n    bind:value=\"{guess}\"\n    name=\"clue\"\n    placeholder=\"Clue description\"\n    maxlength=\"{maxLength}\" />\n  <button on:click=\"{onSubmit}\">Submit</button>\n</fieldset>\n\n{#if reveal}\n  {#each top as { clue }}\n    <p>{clue}</p>\n  {/each}\n{/if}\n\n<style>\n  fieldset {\n    outline: none;\n    border: none;\n    margin: 0;\n    padding: 0;\n  }\n\n  input {\n    width: 100%;\n  }</style>\n",
    "<script>\n  import { group } from \"d3-array\";\n  import mapToArray from \"../../utils/mapToArray.js\";\n  import raw from \"../../data/xd-nyt-firsts-1993.csv\";\n  const data = raw.map((d) => ({\n    ...d,\n    words: d.words.split(\",\"),\n    year: +d.year,\n  }));\n\n  const years = mapToArray(group(data, (d) => d.year));\n  console.log(years);\n</script>\n\n<div class=\"items\">\n  {#each years as { key, value }}\n    <div class=\"item\">\n      <p class=\"leaf\">\n        {#each value as { words }}\n          {#each words as word}<span>{word}</span>{/each}\n        {/each}\n      </p>\n      <p class=\"stem\">{key}</p>\n    </div>\n  {/each}\n</div>\n\n<style>\n  .items {\n    display: flex;\n  }\n\n  .item {\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-end;\n  }\n\n  .stem {\n    width: 5em;\n  }\n\n  p {\n    margin: 0;\n    text-align: center;\n  }\n\n  span {\n    display: block;\n    margin: 0;\n    border: 1px solid var(--bg);\n    line-height: 1;\n    font-size: 0.625em;\n    padding: 0.5em;\n    background: var(--default);\n    text-align: center;\n    color: var(--bg);\n  }</style>\n",
    "<script>\n  import { format } from \"d3-format\";\n  import { scaleLinear } from \"d3-scale\";\n  import data from \"../../data/xd-letter-freq-1993.csv\";\n  $: domain = [0, +data[0].percent];\n  $: scale = scaleLinear().domain(domain).range([0, 100]);\n  $: highlight = [\"O\", \"R\", \"E\"];\n</script>\n\n<div class=\"chart\">\n  {#each data as { letter, freq, percent } (letter)}\n    <div\n      class=\"item item--{letter}\"\n      class:highlight=\"{highlight.includes(letter)}\">\n      <span class=\"letter\">{letter}</span>\n      <span class=\"bar\" style=\"height: {scale(+percent)}%;\">\n        <span class=\"percent\">{format('.1%')(percent)}</span>\n      </span>\n    </div>\n  {/each}\n</div>\n\n<style>\n  .chart {\n    height: 50vh;\n    display: flex;\n    margin-top: 1.25em;\n    cursor: crosshair;\n  }\n\n  .item {\n    width: 3.5vw;\n    border: 1px solid var(--bg);\n    text-align: center;\n    display: flex;\n    flex-direction: column-reverse;\n  }\n\n  .bar {\n    display: block;\n    background: var(--default);\n    position: relative;\n  }\n\n  .percent {\n    position: absolute;\n    top: 0;\n    left: 0;\n    transform: translate(0, -1.25em);\n    opacity: 0;\n    font-size: 0.8em;\n  }\n\n  .highlight.item--R .percent {\n    opacity: 0;\n  }\n\n  .highlight .bar {\n    background: var(--primary);\n  }\n\n  .highlight .percent {\n    opacity: 1;\n  }\n\n  .highlight .letter {\n    font-weight: var(--bold);\n  }\n\n  .item:hover .percent {\n    opacity: 1;\n  }</style>\n",
    "<script>\n  import { format } from \"d3-format\";\n  import { scaleLinear } from \"d3-scale\";\n  import data from \"../../data/xd-four-letter-popular-1993.csv\";\n  $: sliced = data.slice(0, 12);\n  $: domain = [0, +sliced[0].percent];\n  $: scale = scaleLinear().domain(domain).range([0, 100]);\n</script>\n\n<table>\n  <thead>\n    <th>Answer</th>\n    <th>Count</th>\n    <th>Percent</th>\n  </thead>\n  <tbody>\n    {#each sliced as { answer, count, percent }}\n      <tr class:highlight=\"{answer === 'OREO'}\">\n        <td>{answer}</td>\n        <td>{format(',')(count)}</td>\n        <td><span style=\"width: {scale(+percent)}%;\">{percent}%</span></td>\n      </tr>\n    {/each}\n  </tbody>\n</table>\n\n<style>\n  table {\n    max-width: 30em;\n    margin: 0 auto;\n  }\n  .highlight {\n    font-weight: var(--bold);\n  }\n  td:nth-child(n + 2),\n  th:nth-child(n + 2) {\n    text-align: right;\n    padding: 0.5em;\n  }\n  td:nth-child(1),\n  th:nth-child(1) {\n    width: 5em;\n  }\n  td:nth-child(3),\n  th:nth-child(3) {\n    width: 15em;\n    padding-left: 2em;\n  }\n  span {\n    display: inline-block;\n    height: 100%;\n    background-color: var(--default);\n    padding: 0.25em;\n    padding-right: 0.5em;\n    line-height: 1;\n    color: var(--white);\n  }</style>\n",
    "<script>\n  import { format } from \"d3-format\";\n  import { scaleLinear } from \"d3-scale\";\n  import { group } from \"d3-array\";\n  import data from \"../../data/xd-four-letter-popular-1993.csv\";\n\n  $: count = 100;\n  $: sliced = data.slice(0, count);\n  $: grouped = group(sliced, (d) => Math.floor(count / 1000));\n  $: console.log(grouped);\n  $: domain = [+sliced[count - 1].count, +sliced[0].count];\n  // $: domain = [0, +sliced[0].count];\n  $: scale = scaleLinear().domain(domain).range([0, 100]);\n</script>\n\n<div class=\"grid\">\n  {#each sliced as { answer, count }, i}\n    <div class=\"item\" class:highlight=\"{answer === 'OREO'}\">\n      <span class=\"bg\" style=\"opacity: {scale(+count)}%;\"></span>\n      <span class=\"answer\">{answer}</span>\n      <span class=\"count\">{format(',')(count)}</span>\n      <span class=\"rank\">{i + 1}</span>\n    </div>\n  {/each}\n</div>\n\n<style>\n  .grid {\n    display: flex;\n    flex-wrap: wrap;\n  }\n\n  .item {\n    position: relative;\n    padding: 1em;\n    margin: 1px;\n    border: 1px solid var(--default);\n  }\n\n  span {\n    width: 3em;\n    display: block;\n    text-align: center;\n    color: var(--fg);\n    position: relative;\n    line-height: 1;\n  }\n\n  .bg {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background: var(--highlight);\n  }\n\n  .highlight {\n    outline: 2px solid var(--fg);\n    z-index: var(--z-top);\n  }\n\n  .answer {\n    font-weight: var(--bold);\n  }\n\n  .count {\n    margin-top: 0.5em;\n    font-size: 0.8em;\n  }\n\n  .rank {\n    position: absolute;\n    top: 0.5em;\n    left: 0.5em;\n    line-height: 1;\n    font-size: 0.5em;\n    opacity: 0.75;\n  }</style>\n",
    "<script>\n  import raw from \"../../data/xd-oreo-possible-1993.csv\";\n  import { scaleLinear } from \"d3-scale\";\n\n  const letters = [\"O\", \"R\", \"E\", \"O\"];\n  const scale = scaleLinear();\n  let flipped = [false, false, false, false];\n\n  const data = raw.map((d) => ({\n    ...d,\n    shareEven: +d.distributed_share_pct,\n    shareOreo: +d.oreo_share_pct,\n    heatmap: d.heatmap.split(\"|\").map((v) => +v),\n    possible: +d.possible_anwers,\n  }));\n\n  const flip = (i) => {\n    flipped[i] = !flipped[i];\n    flipped = flipped;\n  };\n\n  $: query = letters.map((d, i) => (flipped[i] ? d : \"_\")).join(\"\");\n  $: datum = data.find((d) => d.query === query);\n  $: heatmap = datum.heatmap.map((d) => (d === datum.possible ? 0 : d));\n  $: query,\n    scale.domain([\n      Math.min(...datum.heatmap.filter((d) => d > 0)),\n      Math.max(...datum.heatmap),\n    ]);\n</script>\n\n<div class=\"cards\">\n  {#each letters as letter, i}\n    <div class=\"card\" class:flip=\"{flipped[i]}\" on:click=\"{() => flip(i)}\">\n      <div class=\"inner\">\n        <div class=\"front\">\n          <div class=\"bg\" style=\"opacity: {scale(heatmap[i])};\"></div>\n          <span>?</span>\n        </div>\n        <div class=\"back\"><span>{letter}</span></div>\n      </div>\n    </div>\n  {/each}\n</div>\n\n<style>\n  .cards {\n    display: flex;\n    cursor: pointer;\n    justify-content: center;\n  }\n\n  .card {\n    perspective: 1000px;\n  }\n\n  .flip .inner {\n    transform: rotateY(180deg);\n  }\n\n  .card,\n  .inner {\n    position: relative;\n    width: 5em;\n    height: 5em;\n  }\n\n  .inner {\n    transition: transform 0.5s ease-in-out;\n    transform-origin: 50% 50%;\n    transform-style: preserve-3d;\n  }\n\n  .front,\n  .back {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    -webkit-backface-visibility: hidden;\n            backface-visibility: hidden;\n    text-align: center;\n  }\n\n  .bg {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background: var(--highlight);\n    z-index: 0;\n  }\n\n  .front {\n    /* background: white; */\n  }\n\n  .back {\n    background: var(--default);\n    color: var(--bg);\n    transform: rotateY(180deg);\n  }\n\n  span {\n    display: block;\n    font-size: 4em;\n    width: 100%;\n    margin-top: 0.125em;\n    position: relative;\n  }</style>\n",
    "<script>\n  import { onMount } from \"svelte\";\n  import { format } from \"d3-format\";\n  import { scaleLinear, scalePow } from \"d3-scale\";\n  import { line, curveStepBefore } from \"d3-shape\";\n  import { axisLeft, axisBottom } from \"d3-axis\";\n  import { csv } from \"d3-fetch\";\n\n  const pad = 16;\n  let data = [];\n  let highlightData = [];\n  let width = 1;\n  let height = 1;\n  let r = 4;\n  let fill = \"#187aaf\";\n  let canvas;\n  let ctx;\n\n  $: maxCount = Math.max(...data.map((d) => d.count));\n  $: maxProb = Math.max(...data.map((d) => d.prob));\n  $: domainX = [0, maxProb];\n  $: domainY = [0, maxCount];\n  $: height = width;\n  $: scaleX = scalePow()\n    .exponent(0.5)\n    .domain(domainX)\n    .range([pad * 2, width - pad * 2]);\n  $: scaleY = scaleLinear()\n    .domain(domainY)\n    .range([height - pad * 2, pad * 2]);\n\n  $: axisX = axisBottom(scaleX);\n  $: axisY = axisLeft(scaleY);\n\n  $: if (ctx && data) {\n    ctx.clearRect(0, 0, width, height);\n\n    data.forEach((d) => {\n      ctx.beginPath();\n      ctx.arc(\n        scaleX(d.prob) * 2,\n        scaleY(d.count) * 2,\n        r,\n        0,\n        2 * Math.PI,\n        false\n      );\n      ctx.fillStyle = fill;\n      ctx.fill();\n    });\n  }\n\n  const cleanAnswers = (arr) => {\n    return arr.map((d) => ({\n      ...d,\n      count: +d.count,\n      percent: +d.percent,\n      sum: +d.sum,\n      prob: +d.prob,\n    }));\n  };\n\n  onMount(() => {\n    ctx = canvas.getContext(\"2d\");\n    csv(\"assets/data/xd-four-letter-score-1993.csv\")\n      .then(cleanAnswers)\n      .then((result) => {\n        data = result;\n        highlightData = data.filter((d) => d.answer === \"OREO\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  });\n</script>\n\n<div bind:offsetWidth=\"{width}\" style=\"height: {height}px;\">\n  <canvas\n    bind:this=\"{canvas}\"\n    width=\"{width * 2}\"\n    height=\"{height * 2}\"\n    style=\"width: {width}px; height: {height}px;\"></canvas>\n  <svg width=\"{width}\" height=\"{height}\">\n    <g transform=\"translate({pad}, {pad})\">\n      {#each highlightData as { answer, prob, count }}\n        <g\n          class:highlight=\"{answer === 'OREO'}\"\n          class:visible=\"{answer === 'OREO'}\"\n          transform=\"translate({scaleX(prob)}, {scaleY(count)})\">\n          <text\n            class=\"bg\"\n            y=\"-8\"\n            alignment-baseline=\"baseline\"\n            text-anchor=\"middle\">\n            {answer}\n          </text>\n          <text\n            class=\"fg\"\n            y=\"-8\"\n            alignment-baseline=\"baseline\"\n            text-anchor=\"middle\">\n            {answer}\n          </text>\n          <circle cx=\"0\" cy=\"0\" r=\"{r}\"></circle>\n        </g>\n      {/each}\n    </g>\n  </svg>\n</div>\n\n<style>\n  div {\n    position: relative;\n  }\n\n  circle {\n    fill: var(--primary);\n  }\n\n  text {\n    fill: var(--primary);\n    font-weight: var(--bold);\n  }\n\n  text.bg {\n    stroke: var(--bg);\n    stroke-width: 4px;\n    fill: none;\n  }\n\n  svg {\n    position: absolute;\n    top: 0;\n    left: 0;\n  }\n\n  canvas {\n    position: absolute;\n    top: 0;\n    left: 0;\n  }</style>\n",
    "<script>\n  import { format } from \"d3-format\";\n  import { scaleLinear } from \"d3-scale\";\n  import { line, curveStepBefore } from \"d3-shape\";\n  import data from \"../../data/xd-nyt-oreo-1950.csv\";\n\n  const cleanData = data\n    .map((d) => ({\n      ...d,\n      year: +d.year,\n      four: +d.four,\n      cookie: +d.cookie,\n      mountain: +d.mountain,\n    }))\n    .map((d) => ({\n      ...d,\n      pctCookie: d.cookie / d.four,\n      pctMountain: d.mountain / d.four,\n    }));\n\n  const minYear = Math.min(...cleanData.map((d) => d.year));\n  const maxYear = Math.max(...cleanData.map((d) => d.year));\n  const domainX = [minYear, maxYear];\n  const maxCookie = Math.max(...cleanData.map((d) => d.pctCookie));\n  const maxMountain = Math.max(...cleanData.map((d) => d.pctMountain));\n  const domainY = [0, Math.max(maxCookie, maxMountain)];\n\n  let width = 1;\n  let height = 1;\n  let pad = 4;\n\n  $: height = Math.floor(width / 2);\n  $: scaleX = scaleLinear()\n    .domain(domainX)\n    .range([0, width - pad * 2]);\n  $: scaleY = scaleLinear()\n    .domain(domainY)\n    .range([height - pad * 2, 0]);\n  // $: pathC =\n  //   \"M\" +\n  //   cleanData.map((d) => `${scaleX(d.year)},${scaleY(d.pctCookie)}`).join(\"L\");\n  // $: pathM =\n  //   \"M\" +\n  //   cleanData\n  //     .map((d) => `${scaleX(d.year)},${scaleY(d.pctMountain)}`)\n  //     .join(\"L\");\n  $: pathC = line()\n    .x((d) => scaleX(d.year))\n    .y((d) => scaleY(d.pctCookie))\n    .curve(curveStepBefore)(cleanData);\n  $: pathM = line()\n    .x((d) => scaleX(d.year))\n    .y((d) => scaleY(d.pctMountain))\n    .curve(curveStepBefore)(cleanData);\n</script>\n\n<div bind:offsetWidth=\"{width}\">\n  <svg width=\"{width}\" height=\"{height}\">\n    <g transform=\"translate({pad}, {pad})\">\n      <path class=\"mountain\" d=\"{pathM}\"></path>\n      <path class=\"cookie\" d=\"{pathC}\"></path>\n    </g>\n  </svg>\n</div>\n\n<style>\n  svg {\n    display: block;\n  }\n\n  path {\n    fill: none;\n    stroke-width: 2px;\n  }\n\n  .cookie {\n    stroke: var(--primary);\n  }\n\n  .mountain {\n    stroke: var(--default);\n  }</style>\n",
    "<script>\n  import feather from \"feather-icons\";\n  export const directions = [\"n\", \"ne\", \"e\", \"se\", \"s\", \"sw\", \"w\", \"nw\"];\n\n  export let name;\n  export let direction = \"n\";\n  export let strokeWidth;\n  export let stroke;\n\n  $: icon = feather.icons[name];\n  $: rotation = directions.indexOf(direction) * 45;\n  $: if (icon) {\n    if (stroke) icon.attrs[\"stroke\"] = stroke;\n    if (strokeWidth) icon.attrs[\"stroke-width\"] = strokeWidth;\n  }\n</script>\n\n{#if icon}\n  <svg {...icon.attrs} style=\"{`transform: rotate(${rotation}deg);`}\">\n    <g>\n      {@html icon.contents}\n    </g>\n  </svg>\n{/if}\n\n<style>\n  svg {\n    width: 1em;\n    height: 1em;\n    overflow: visible;\n    transform-origin: 50% 50%;\n  }</style>\n",
    "<blockquote>\n  “Cookie that some people eat with\n  <mark>mustard.</mark>”\n</blockquote>\n\n<style>\n  blockquote {\n    font-size: 8vh;\n    text-align: center;\n    max-width: 40rem;\n    margin: 0 auto;\n  }</style>\n",
    "<script>\n  import { onMount } from \"svelte\";\n  import { shuffle } from \"d3-array\";\n  const v = Date.now();\n  const url = `https://pudding.cool/assets/data/stories.json?v=${v}`;\n\n  let localURL;\n\n  onMount(() => {\n    localURL = window.location.href;\n  });\n\n  const fetchData = (async () => {\n    const response = await fetch(url);\n    const data = await response.json();\n    const stories = shuffle(data.filter((d) => d.url !== localURL)).slice(0, 5);\n    return stories;\n  })();\n</script>\n\n{#await fetchData then data}\n  {#each data as { hed, url, image }}\n    <div class=\"story\">\n      <p><a href=\"{url}\">{hed}</a></p>\n    </div>\n  {/each}\n{/await}\n\n<style>\n  p {\n    display: flex;\n    align-items: center;\n    margin-bottom: 1.5em;\n  }\n\n  a {\n    /* margin-left: 1em; */\n  }</style>\n"
  ],
  "names": [],
  "mappings": "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"
}